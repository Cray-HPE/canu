# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
network_v1: include('v1_architecture_profile', required=False)
network_v2: include('v2_architecture_profile')
network_v2_tds: include('v2_architecture_profile')
mug: include('mug_architecture_profile')
---
v1_architecture_profile:
  name: str(min=1)
  description: str(min=1, max=256)
  version: int(min=1)
  components: list(include('component'))
  deprecated: bool(required=True)
  lookup_mapper: list(include('lookup_map'))

v2_architecture_profile:
  name: str(min=1)
  description: str(min=1, max=256)
  version: int(min=1)
  components: list(include('component'))
  lookup_mapper: list(include('lookup_map'))

mug_architecture_profile:
  name: str(min=1)
  description: str(min=1, max=256)
  version: int(min=1)
  components: list(include('component'))
  lookup_mapper: list(include('lookup_map'))
#    constraints: list(include('constraint'))

component:
  name: str(min=1, exclude=' ')
  description: str(required=False)
  model: str(min=1, exclude=' ')
  connections: list(include('connection'))

constraint:
  name: str(min=1, exclude=' ')
  description: str(required=False)
  model: str(required=False)
  connections: list(include('connection'), required=False)

connection:
  name: str()
  speed: int()
  number: int(required=False)
  comment: str(required=False)

lookup_map:
  lookup_name: list(str(min=1, exclude=' '))
  shasta_name: str(min=1, exclude=' ')
  architecture_type: str(min=1, exclude=' ')
  regex: bool(required=False)
