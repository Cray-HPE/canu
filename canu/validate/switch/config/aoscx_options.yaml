# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
---
# Indicates the style of the configuration
style: aoscx
# if there is a delta, negate the parents and re-write the parents with children
sectional_overwrite: []
# if there is a delta, overwrite these parents instead of one of their children
sectional_overwrite_no_negate: []
# The default order value is 500, with a range between 1 - 999.
# Commands with smaller order values float to the top in the order of execution.
# Commands with larger order values float to the bottom in the order of execution.
# Syntax Example:
# - lineage:
#   - startswith:
#     - no route-map
#   order: 600
ordering:
  - lineage:
      - startswith: hostname
    order: 1
  - lineage:
      - startswith: bfd
    order: 2
  - lineage:
      - startswith: user
    order: 3
  - lineage:
      - startswith: vrf
    order: 5
  - lineage:
      - startswith: ssh
    order: 10
  - lineage:
      - startswith: ntp
    order: 15
  - lineage:
      - startswith: access-list
    order: 30
  - lineage:
      - startswith: vlan
    order: 50
  - lineage:
      - startswith: spanning-tree
    order: 100
  - lineage:
      - startswith: interface mgmt
    order: 120
  - lineage:
      - startswith: interface lag
    order: 160
  - lineage:
      - startswith: interface loopback
    order: 600
  - lineage:
      - startswith: interface vlan
    order: 700
  - lineage:
      - startswith: snmp-server
    order: 780
  - lineage:
      - startswith: snmpv3
    order: 790
  - lineage:
      - startswith: vsx
    order: 800
  - lineage:
      - startswith: interface 1/1
    order: 810
  - lineage:
      - startswith: ip
    order: 820
  - lineage:
      - startswith: router
    order: 850
  - lineage:
      - startswith: https-server
    order: 900
  - lineage:
      - startswith: nae-script
    order: 950
  - lineage:
      - startswith: nae-agent
    order: 960
# adds +1 indent to lines following start_expression and removes the +1 indent for lines following end_expression
indent_adjust:
  []
  # - start_expression: "system-mac"
  #   end_expression: "vsx-sync"
parent_allows_duplicate_child: []
sectional_exiting:
  # This rule is used in the hierarchical_configuration unit test for .add_section_exiting()
  - lineage:
      - startswith: router bgp
      - startswith: template peer-policy
    exit_text: exit-peer-policy
  - lineage:
      - startswith: router bgp
      - startswith: template peer-session
    exit_text: exit-peer-session
  - lineage:
      - startswith: router bgp
      - startswith: address-family
    exit_text: exit-address-family
# substitions against the full multi-line config text
full_text_sub: []
#- search: 'banner\s(exec|motd)\s(\S)\n(.*\n){1,}(\2)'
#  replace: ''
#- search: 'banner\s(exec|motd)\s(\S.).+\n(.*\n){1,}.*(\2)'
#  replace: ''
#- search: 'banner\s(exec|motd)\s(\S.)\n(.*\n){1,}(\2)'
#  replace: ''
# substitions against each line of the config text
per_line_sub:
  - search: ^Building configuration.*
    replace: ""
  - search: ^ type jl663a.*
    replace: ""
  - search: ^user admin.*
    replace: ""
  - search: ^Current configuration.*
    replace: ""
  - search: ^! Last configuration change.*
    replace: ""
  - search: ^! NVRAM config last updated.*
    replace: ""
  - search: ^ntp clock-period .*
    replace: ""
  - search: ^version.*
    replace: ""
  - search: ^ logging event link-status$
    replace: ""
  - search: ^ logging event subif-link-status$
    replace: ""
  - search: ^\s*ipv6 unreachables disable$
    replace: ""
  - search: ^end$
    replace: ""
  - search: '^\s*[#!].*'
    replace: ""
  - search: ^ no ip address
    replace: ""
  - search: ^ exit-peer-policy
    replace: ""
  - search: ^ exit-peer-session
    replace: ""
  - search: ^ exit-address-family
    replace: ""
  - search: ^crypto key generate rsa general-keys.*$
    replace: ""
idempotent_commands_blacklist: []

# These commands do not require negation, they simply overwrite themselves
# Example Syntax
# - lineage:
#   - startswith: interface
#   - startswith: description
idempotent_commands:
  - lineage:
      - startswith: vlan
      - startswith: name
  - lineage:
      - startswith: interface
      - startswith:
          - description
          - ip address
          - vlan trunk
  - lineage:
      - startswith: interface vlan
      - startswith: ip ospf
  - lineage:
      - startswith: router ospf
      - startswith: router-id
  - lineage:
      - startswith: vsx
      - startswith: system-mac
  - lineage:
      - startswith: vsx
      - startswith: inter-switch-link
  - lineage:
      - startswith: vsx
      - startswith: role
  - lineage:
      - startswith: hostname
  - lineage:
      - startswith: banner exec
  - lineage:
      - startswith: banner motd
# Default when expression: list of expressions
negation_default_when: []
# Negate substitutions: expression -> negate with
# # Example Syntax:
# - lineage:
#   - startswith: vsx
#   - startswith: description
#  use: no description

negation_negate_with:
  - lineage:
      - startswith: vsx
      - startswith: keepalive peer
    use: no keepalive
  - lineage:
      - startswith: vsf
    use: ""
  - lineage:
      - startswith: interface vlan
      - startswith: active-gateway ip mac
    use: no active-gateway ip mac
  - lineage:
      - startswith: interface 1
      - startswith: speed auto
    use: no speed
  - lineage:
      - startswith: interface lag
      - startswith: lacp rate
    use: no lacp rate
  - lineage:
      - startswith: interface 1
      - startswith: mtu
    use: no mtu
  - lineage:
      - startswith: spanning-tree bpdu-guard
    use: no spanning-tree bpdu-guard timeout
  - lineage:
      - startswith: spanning-tree bpdu-guard
    use: no spanning-tree bpdu-guard timeout
  - lineage:
      - startswith: interface lag 1 multi-chassis
    use: no interface lag 1
  - lineage:
      - startswith: interface lag 2 multi-chassis
    use: no interface lag 2
  - lineage:
      - startswith: interface lag 3 multi-chassis
    use: no interface lag 3
  - lineage:
      - startswith: interface lag 4 multi-chassis
    use: no interface lag 4
  - lineage:
      - startswith: interface lag 5 multi-chassis
    use: no interface lag 5
  - lineage:
      - startswith: interface lag 6 multi-chassis
    use: no interface lag 6
  - lineage:
      - startswith: interface lag 7 multi-chassis
    use: no interface lag 7
  - lineage:
      - startswith: interface lag 8 multi-chassis
    use: no interface lag 8
  - lineage:
      - startswith: interface lag 9 multi-chassis
    use: no interface lag 9
  - lineage:
      - startswith: interface lag 10 multi-chassis
    use: no interface lag 10
  - lineage:
      - startswith: interface lag 11 multi-chassis
    use: no interface lag 11
  - lineage:
      - startswith: interface lag 12 multi-chassis
    use: no interface lag 12
  - lineage:
      - startswith: interface lag 13 multi-chassis
    use: no interface lag 13
  - lineage:
      - startswith: interface lag 14 multi-chassis
    use: no interface lag 14
  - lineage:
      - startswith: interface lag 15 multi-chassis
    use: no interface lag 15
  - lineage:
      - startswith: interface lag 16 multi-chassis
    use: no interface lag 16
  - lineage:
      - startswith: interface lag 17 multi-chassis
    use: no interface lag 17
  - lineage:
      - startswith: interface lag 18 multi-chassis
    use: no interface lag 18
  - lineage:
      - startswith: interface lag 19 multi-chassis
    use: no interface lag 19
  - lineage:
      - startswith: interface lag 20 multi-chassis
    use: no interface lag 20
  - lineage:
      - startswith: interface lag 21 multi-chassis
    use: no interface lag 21
  - lineage:
      - startswith: interface lag 22 multi-chassis
    use: no interface lag 22
  - lineage:
      - startswith: interface lag 23 multi-chassis
    use: no interface lag 23
  - lineage:
      - startswith: interface lag 48 multi-chassis
    use: no interface lag 48
  - lineage:
      - startswith: interface lag 53 multi-chassis
    use: no interface lag 53
  - lineage:
      - startswith: interface lag 99 multi-chassis
    use: no interface lag 99
  - lineage:
      - startswith: interface lag 100 multi-chassis
    use: no interface lag 100
  - lineage:
      - startswith: interface lag 101 multi-chassis
    use: no interface lag 101
  - lineage:
      - startswith: interface lag 151 multi-chassis
    use: no interface lag 151
  - lineage:
      - startswith: interface lag 255 multi-chassis
    use: no interface lag 255
  - lineage:
      - startswith: interface lag 256 multi-chassis
    use: no interface lag 256
